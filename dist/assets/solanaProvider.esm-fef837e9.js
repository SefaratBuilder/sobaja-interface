import{H as O,a4 as d,ao as k,K as C,a5 as K,b as y,ap as P,N as F,a7 as S,B as f}from"./index-794d9b4b.js";import{p as x,e as G}from"./baseControllers.esm-357752ba.js";import{B as T}from"./baseProvider.esm-f833d0fb.js";import{C as B,b as u,P as A,K as J,V as b}from"./index.browser.esm-b1ac754f.js";import{getED25519Key as V}from"./openloginEd25519.esm-d5e48cd0.js";import{n as Q}from"./nacl-fast-939fb075.js";function X(s){return(e,r,n,t)=>e.method==="solana_chainId"?(r.result=s,t()):n()}function Y(s){return(e,r,n,t)=>e.method==="solana_provider_config"?(r.result=s,t()):n()}function R(s){const{chainId:e}=s;return P([X(e),Y(s)])}function Z(s){const{rpcTarget:e}=s,r=G({rpcTarget:e});return{networkMiddleware:P([R(s),r]),fetchMiddleware:r}}function ee(s){let{getAccounts:e}=s;return S(async(r,n,t)=>{const{method:i}=r;if(i!=="getAccounts")return t();if(!e)throw new Error("WalletMiddleware - opts.getAccounts not provided");const a=await e(r);n.result=a})}function re(s){let{requestAccounts:e}=s;return S(async(r,n,t)=>{const{method:i}=r;if(i!=="requestAccounts")return t();if(!e)throw new Error("WalletMiddleware - opts.requestAccounts not provided");const a=await e(r);n.result=a})}function g(s,e){return S(async(r,n,t)=>{const{method:i}=r;if(i!==s)return t();if(!e)throw new Error(`WalletMiddleware - ${s} not provided`);const a=await e(r);n.result=a})}function I(s){const{getAccounts:e,requestAccounts:r,signTransaction:n,signAndSendTransaction:t,signAllTransactions:i,signMessage:a,getPrivateKey:o,getSecretKey:c}=s;return P([re({requestAccounts:r}),ee({getAccounts:e}),g("signTransaction",n),g("signAndSendTransaction",t),g("signAllTransactions",i),g("signMessage",a),g("solanaPrivateKey",o),g("private_key",o),g("solanaSecretKey",c)])}function ne(s){let{addNewChainConfig:e,switchSolanaChain:r}=s;return P([g("addSolanaChain",e),g("switchSolanaChain",r)])}function se(s){let{updatePrivatekey:e}=s;return P([g("updateAccount",e)])}function N(s,e){var r=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);e&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(s,t).enumerable})),r.push.apply(r,n)}return r}function q(s){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?N(Object(r),!0).forEach(function(n){y(s,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(r)):N(Object(r)).forEach(function(n){Object.defineProperty(s,n,Object.getOwnPropertyDescriptor(r,n))})}return s}class _ extends T{constructor(e){let{config:r,state:n}=e;super({config:{chainConfig:q(q({},r.chainConfig),{},{chainNamespace:O.SOLANA})},state:n})}async switchChain(e){throw F.unsupportedOperation("Chain switching is not supported by this adapter")}async setupProvider(e){const r=new K,n=this.getProviderHandlers(e),t=I(n);r.push(t);const i=R(this.config.chainConfig);r.push(i);const a=this.getInjectedProviderProxy(e);a&&r.push(a);const o=x(r);this.updateProviderEngineProxy(o),await this.lookupNetwork()}async lookupNetwork(){const{chainConfig:e}=this.config;return this.update({chainId:e.chainId}),e.chainId||""}getInjectedProviderProxy(e){}}const U=s=>({requestAccounts:async()=>s.publicKey?[u.encode(s.publicKey.toBytes())]:[],getAccounts:async()=>s.publicKey?[u.encode(s.publicKey.toBytes())]:[],getPrivateKey:async()=>{throw d.ethErrors.rpc.methodNotSupported()},getSecretKey:async()=>{throw d.ethErrors.rpc.methodNotSupported()},signTransaction:async r=>await s.signTransaction(r.params.message),signMessage:async r=>(await s.signMessage(r.params.message,r.params.display)).signature,signAllTransactions:async r=>{var n,t;if(!((n=r.params)!==null&&n!==void 0&&n.message)||!((t=r.params)!==null&&t!==void 0&&t.message.length))throw d.ethErrors.rpc.invalidParams("message");return await s.signAllTransactions(r.params.message)},signAndSendTransaction:async r=>({signature:(await s.signAndSendTransaction(r.params.message)).signature})});function H(s,e){var r=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);e&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(s,t).enumerable})),r.push.apply(r,n)}return r}function te(s){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?H(Object(r),!0).forEach(function(n){y(s,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(r)):H(Object(r)).forEach(function(n){Object.defineProperty(s,n,Object.getOwnPropertyDescriptor(r,n))})}return s}function L(s){return S(async(e,r,n)=>{const t=await s.request(te({},e));r.result=t})}class me extends _{getProviderHandlers(e){return U(e)}getInjectedProviderProxy(e){return L(e)}}const M=s=>s.version!==void 0||s instanceof b,ae=(s,e)=>({requestAccounts:async()=>{const{data:n}=await s.connect();return[n.publicKey]},getAccounts:async()=>{const{data:n}=await s.connect();return[n.publicKey]},getPrivateKey:async()=>{throw d.ethErrors.rpc.methodNotSupported()},getSecretKey:async()=>{throw d.ethErrors.rpc.methodNotSupported()},signTransaction:async n=>{const t=n.params.message;if(!t)throw d.ethErrors.rpc.invalidRequest({message:"Invalid transaction message"});const i=M(t)?t.message.serialize():t.serializeMessage(),{data:a}=await s.signTransaction(u.encode(i));if(!a.publicKey||!a.signature)throw new Error("Invalid signature from slope wallet");const o=new A(a.publicKey),c=u.decode(a.signature);return t.addSignature(o,f.from(c)),t},signMessage:async n=>{const t=await s.signMessage(n.params.message);return u.decode(t.data.signature)},signAndSendTransaction:async n=>{const t=e();if(!t)throw d.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const i=n.params.message;if(!i)throw d.ethErrors.rpc.invalidRequest({message:"Invalid transaction message"});const a=M(i)?i.message.serialize():i.serializeMessage(),{data:o}=await s.signTransaction(u.encode(a));if(!o.publicKey||!o.signature)throw new Error("Invalid signature from slope wallet");const c=new A(o.publicKey),p=u.decode(o.signature);i.addSignature(c,f.from(p));const h=await t.request({method:"solana_provider_config",params:[]});return{signature:await new B(h.rpcTarget).sendRawTransaction(i.serialize())}},signAllTransactions:async n=>{var t,i,a;if(!((t=n.params)!==null&&t!==void 0&&t.message)||!((i=n.params)!==null&&i!==void 0&&i.message.length))throw d.ethErrors.rpc.invalidParams("message");const o=n.params.message,{length:c}=o,p=[];for(let l=0;l<c;l++){const v=o[l],W=M(v)?v.message.serialize():v.serializeMessage();p.push(u.encode(W))}const{msg:h,data:m}=await s.signAllTransactions(p);if(!m.publicKey||((a=m.signatures)===null||a===void 0?void 0:a.length)!==c)throw new Error(h);const w=new A(m.publicKey);for(let l=0;l<c;l++){const v=u.decode(m.signatures[l]);o[l].addSignature(w,f.from(v))}return o}});class we extends _{getProviderHandlers(e){return ae(e,this.getProviderEngineProxy.bind(this))}}const ie=(s,e)=>{const r=U(s);return r.signAndSendTransaction=async n=>{const t=e();if(!t)throw d.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const i=await s.signTransaction(n.params.message),a=await t.request({method:"solana_provider_config",params:[]});return{signature:await new B(a.rpcTarget).sendRawTransaction(i.serialize())}},r.signMessage=async n=>await s.signMessage(n.params.message,n.params.display),r};class ye extends _{getProviderHandlers(e){return ie(e,this.getProviderEngineProxy.bind(this))}}const oe=s=>({requestAccounts:async()=>await s.request({method:"solana_requestAccounts",params:{}}),getAccounts:async()=>await s.request({method:"solana_requestAccounts",params:{}}),getPrivateKey:async()=>{throw d.ethErrors.rpc.methodNotSupported()},getSecretKey:async()=>{throw d.ethErrors.rpc.methodNotSupported()},signMessage:async r=>{var n;if(!((n=r.params)!==null&&n!==void 0&&n.message))throw d.ethErrors.rpc.invalidParams("message");return await s.signMessage(r.params.message)},signTransaction:async r=>{var n;if(!((n=r.params)!==null&&n!==void 0&&n.message))throw d.ethErrors.rpc.invalidParams("message");const t=r.params.message;return await s.signTransaction(t)},signAndSendTransaction:async r=>{var n;if(!((n=r.params)!==null&&n!==void 0&&n.message))throw d.ethErrors.rpc.invalidParams("message");const t=r.params.message;return{signature:await s.sendTransaction(t)}},signAllTransactions:async r=>{var n,t;if(!((n=r.params)!==null&&n!==void 0&&n.message)||!((t=r.params)!==null&&t!==void 0&&t.message.length))throw d.ethErrors.rpc.invalidParams("message");const i=r.params.message;return await s.signAllTransactions(i)}});function j(s,e){var r=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);e&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(s,t).enumerable})),r.push.apply(r,n)}return r}function E(s){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?j(Object(r),!0).forEach(function(n){y(s,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(r)):j(Object(r)).forEach(function(n){Object.defineProperty(s,n,Object.getOwnPropertyDescriptor(r,n))})}return s}class ve extends T{constructor(e){let{config:r,state:n}=e;super({config:{chainConfig:E(E({},r.chainConfig),{},{chainNamespace:O.SOLANA})},state:n})}async switchChain(e){await this.provider.request({method:"switchSolanaChain",params:[{chainId:e.chainId}]})}async addChain(e){super.addChain(e),await this.provider.request({method:"addNewChainConfig",params:[{chainId:e.chainId,chainName:e.displayName,rpcUrls:[e.rpcTarget],blockExplorerUrls:[e.blockExplorer],nativeCurrency:{name:e.tickerName,symbol:e.ticker,decimals:e.decimals||18}}]})}async setupProvider(e){this.handleInjectedProviderUpdate(e),await this.setupEngine(e)}async lookupNetwork(){if(!this.provider)throw d.ethErrors.provider.custom({message:"Torus solana provider is not initialized",code:4902});const{chainId:e}=this.config.chainConfig,r=await this.provider.request({method:"solana_chainId"}),n=k(r.toString())?r:`0x${parseInt(r,10).toString(16)}`;if(e!==n)throw C.rpcConnectionError(`Invalid network, net_version is: ${n}, expected: ${e}`);return this.update({chainId:n}),this.provider.emit("connect",{chainId:this.state.chainId}),this.provider.emit("chainChanged",this.state.chainId),this.state.chainId}async setupEngine(e){const r=oe(e),n=I(r),t=L(e),i=new K;i.push(n),i.push(t);const a=x(i);this.updateProviderEngineProxy(a),await this.lookupNetwork()}async handleInjectedProviderUpdate(e){e.on("accountsChanged",async r=>{this.provider.emit("accountsChanged",r)}),e.on("chainChanged",async r=>{const n=k(r)?r:`0x${parseInt(r,10).toString(16)}`;this.configure({chainConfig:E(E({},this.config.chainConfig),{},{chainId:n})}),await this.setupProvider(e)})}}async function ce(s){let{privKey:e,getProviderEngineProxy:r}=s;const n=()=>J.fromSecretKey(f.from(e,"hex"));if(typeof e!="string")throw C.invalidParams("privKey must be a string");const t=n();return{requestAccounts:async()=>[t.publicKey.toBase58()],getAccounts:async()=>[t.publicKey.toBase58()],getPrivateKey:async()=>e,getSecretKey:async()=>u.encode(t.secretKey),signTransaction:async a=>{var o;if(!((o=a.params)!==null&&o!==void 0&&o.message))throw d.ethErrors.rpc.invalidParams("message");const c=a.params.message;return c.version!==void 0||c instanceof b?c.sign([t]):c.partialSign(t),c},signMessage:async a=>{var o;if(!((o=a.params)!==null&&o!==void 0&&o.message))throw d.ethErrors.rpc.invalidParams("message");return Q.sign.detached(a.params.message,t.secretKey)},signAndSendTransaction:async a=>{var o;if(!((o=a.params)!==null&&o!==void 0&&o.message))throw d.ethErrors.rpc.invalidParams("message");const c=r();if(!c)throw d.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const p=a.params.message;return p.version!==void 0||p instanceof b?p.sign([t]):p.partialSign(t),{signature:await c.request({method:"sendTransaction",params:[f.from(p.serialize()).toString("base64"),{encoding:"base64",preflightCommitment:"confirmed"}]})}},signAllTransactions:async a=>{var o,c,p;if(!((o=a.params)!==null&&o!==void 0&&o.message)||!((c=a.params)!==null&&c!==void 0&&c.message.length))throw d.ethErrors.rpc.invalidParams("message");const h=(p=a.params)===null||p===void 0?void 0:p.message;for(const m of h||[]){const w=m;w.version!==void 0||w instanceof b?w.sign([t]):w.partialSign(t)}return h}}}function $(s,e){var r=Object.keys(s);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(s);e&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(s,t).enumerable})),r.push.apply(r,n)}return r}function D(s){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?$(Object(r),!0).forEach(function(n){y(s,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(r)):$(Object(r)).forEach(function(n){Object.defineProperty(s,n,Object.getOwnPropertyDescriptor(r,n))})}return s}class z extends T{constructor(e){let{config:r,state:n}=e;super({config:{chainConfig:D(D({},r.chainConfig),{},{chainNamespace:O.SOLANA})},state:n})}async enable(){if(!this.state.privateKey)throw d.ethErrors.provider.custom({message:"Private key is not found in state, plz pass it in constructor state param",code:4902});return await this.setupProvider(this.state.privateKey),this._providerEngineProxy.request({method:"eth_accounts"})}getEd25519Key(e){return V(e).sk.toString("hex")}async setupProvider(e){const r=await ce({privKey:e,getProviderEngineProxy:this.getProviderEngineProxy.bind(this)}),n=I(r),t=new K,{networkMiddleware:i}=Z(this.config.chainConfig);t.push(this.getChainSwitchMiddleware()),t.push(this.getAccountMiddleware()),t.push(n),t.push(i);const a=x(t);this.updateProviderEngineProxy(a),await this.lookupNetwork()}async updateAccount(e){if(!this._providerEngineProxy)throw d.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});await this._providerEngineProxy.request({method:"solanaPrivateKey"})!==e.privateKey&&(await this.setupProvider(e.privateKey),this._providerEngineProxy.emit("accountsChanged",{accounts:await this._providerEngineProxy.request({method:"requestAccounts"})}))}async switchChain(e){if(!this._providerEngineProxy)throw d.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const r=this.getChainConfig(e.chainId);this.update({chainId:"loading"}),this.configure({chainConfig:r});const n=await this._providerEngineProxy.request({method:"solanaPrivateKey"});await this.setupProvider(n)}async lookupNetwork(){if(!this._providerEngineProxy)throw d.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const e=await this._providerEngineProxy.request({method:"getHealth",params:[]}),{chainConfig:r}=this.config;if(e!=="ok")throw C.rpcConnectionError(`Failed to lookup network for following rpc target: ${r.rpcTarget}`);return this.update({chainId:r.chainId}),this.state.chainId!==r.chainId&&(this.provider.emit("chainChanged",this.state.chainId),this.provider.emit("connect",{chainId:this.state.chainId})),this.state.chainId}getChainSwitchMiddleware(){return ne({addNewChainConfig:async n=>{if(!n.params)throw d.ethErrors.rpc.invalidParams("Missing request params");const{chainId:t,chainName:i,rpcUrls:a,blockExplorerUrls:o,nativeCurrency:c}=n.params;if(!t)throw d.ethErrors.rpc.invalidParams("Missing chainId in chainParams");if(!a||a.length===0)throw d.ethErrors.rpc.invalidParams("Missing rpcUrls in chainParams");if(!c)throw d.ethErrors.rpc.invalidParams("Missing nativeCurrency in chainParams");this.addChain({chainNamespace:O.SOLANA,chainId:t,ticker:c?.symbol||"SOL",tickerName:c?.name||"Solana",displayName:i,rpcTarget:a[0],blockExplorer:o?.[0]||"",decimals:c?.decimals||9})},switchSolanaChain:async n=>{if(!n.params)throw d.ethErrors.rpc.invalidParams("Missing request params");if(!n.params.chainId)throw d.ethErrors.rpc.invalidParams("Missing chainId");await this.switchChain(n.params)}})}getAccountMiddleware(){return se({updatePrivatekey:async r=>{if(!r.params)throw d.ethErrors.rpc.invalidParams("Missing request params");if(!r.params.privateKey)throw d.ethErrors.rpc.invalidParams("Missing privateKey");const{privateKey:n}=r.params;await this.updateAccount({privateKey:n})}})}}y(z,"getProviderInstance",async s=>{const e=new z({config:{chainConfig:s.chainConfig}});return await e.setupProvider(s.privKey),e});class fe{constructor(e){y(this,"provider",void 0),this.provider=e}async requestAccounts(){return await this.provider.request({method:"requestAccounts",params:{}})}async signAndSendTransaction(e){const{signature:r}=await this.provider.request({method:"signAndSendTransaction",params:{message:e}});return{signature:r}}async signTransaction(e){return await this.provider.request({method:"signTransaction",params:{message:e}})}async signAllTransactions(e){return await this.provider.request({method:"signAllTransactions",params:{message:e}})}async signMessage(e){return await this.provider.request({method:"signMessage",params:{message:e}})}async request(e){return await this.provider.request(e)}}export{me as PhantomInjectedProvider,we as SlopeInjectedProxyProvider,z as SolanaPrivateKeyProvider,fe as SolanaWallet,ye as SolflareInjectedProvider,ve as TorusInjectedProvider};
